// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTL_Recipe.Entity;

#nullable disable

namespace PTL_Recipe.Migrations.Application
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Entity.Models.Cuisine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cuisine");
                });

            modelBuilder.Entity("Entity.Models.Recipe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cuisine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Ingreditents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = "59bc5c4f-0497-4cc7-8b26-2c7a24ebba72",
                            Active = true,
                            Category = "Test 1",
                            Cuisine = "Test 1",
                            DateCreated = new DateTime(2024, 2, 9, 10, 22, 2, 6, DateTimeKind.Local).AddTicks(1925),
                            Description = "Test 1",
                            Ingreditents = "Ingreditents 1, Ingreditents 2, Ingreditents 3, Ingreditents 4, Ingreditents 5, Ingreditents 6",
                            Name = "Test 1"
                        },
                        new
                        {
                            Id = "5fbb2ef4-6eae-4dd1-bf7b-12f5461c8d04",
                            Active = true,
                            Category = "Test 2",
                            Cuisine = "Test 2",
                            DateCreated = new DateTime(2024, 2, 9, 10, 22, 2, 6, DateTimeKind.Local).AddTicks(1975),
                            Description = "Test 2",
                            Ingreditents = "Ingreditents 11, Ingreditents 22, Ingreditents 33, Ingreditents 44, Ingreditents 55, Ingreditents 66",
                            Name = "Test 2"
                        },
                        new
                        {
                            Id = "c234b821-20d2-4182-8c4f-f506eb08a093",
                            Active = true,
                            Category = "Test 3",
                            Cuisine = "Test 3",
                            DateCreated = new DateTime(2024, 2, 9, 10, 22, 2, 6, DateTimeKind.Local).AddTicks(1982),
                            Description = "Test 3",
                            Ingreditents = "Ingreditents 111, Ingreditents 222, Ingreditents 333, Ingreditents 444, Ingreditents 555, Ingreditents 666",
                            Name = "Test 3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
